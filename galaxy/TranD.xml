<tool id="transcript_distance" name="TranD" version="@WRAPPER_VERSION@">
  <description>Perform transcript distance, complexity and transcriptome comparison analyses</description> 
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command detect_errors="exit_code"><![CDATA[

## Begin TranD Command Line
  mkdir outputs;
  cd outputs;
  trand

##Set parameters when running with one GTF files 

    #if str( $gtf_input.gtfNum ) == "gtf1":
      $gtf1Dataset
      --ea=$gtf_input.eaMode
      #if $gtf_input.keepIR:
         --keepir
      #end if
      #if $gtf_input.consolidateCheck.consolidate == 'True'
        --consolidate 
        --consolPrefix=$gtf_input.consolidateCheck.consolPrefix
      #end if
    #end if

##Set parameters when running with two GTF files 

    #if str( $gtf_input.gtfNum ) == "gtf2":
      $gtf1Dataset
      $gtf2Dataset
      --pairs=$gtf_input.transcriptPairs
      --name1=$gtf_input.gtf1Name
      --name2='$gtf_input.gtf2Name'
      --ea="pairwise"
    #end if

##Run rest of arguments 

    #if $complexityOnly
      --complexityOnly
    #end if
    #if $skipPlots     
      --skip-plots 
    #end if
    #if $skipInterm
      --skip-intermediate
    #end if
    #if str( $logCond.logfile_selector ) == "Yes":
      --logfile="tranD_logFile.txt"
    #end if
    --force

  ]]></command>
  <inputs>
    <conditional name="gtf_input">
      <param name="gtfNum" type="select" display="radio" label="Select the number of GTF files for input into TranD">
        <option value="gtf1">One GTF File</option>
        <option value="gtf2">Two GTF Files</option>
        <validator type="no_options" message="You must select at least one option." /> 
      </param>
      <when value="gtf1">
        <param name="gtf1Dataset" type="data" format="gtf" label="Select GTF file containing transcriptomes of interest from your history" help="File must contain “exon” features with transcript_id and gene_id values in attributes column"/>
        <conditional name="consolidateCheck">
          <param name="consolidate" type="select" display="radio" label="Select 'Yes' to consolidate transcripts" help="Consolidating transcripts remove 5'/3' transcript end variation in redundantly spliced transcripts) with identical junctions prior to complexity calculations, events and summary plotting">
            <option value="True">Yes</option>
            <option value="False">No</option>
          </param>
          <when value="True">
            <param name="consolPrefix" type="text" value="tr" label="Specify the prefix to use for consolidated transcript_id values. Default is 'tr'" help="Prefix must be alphanumeric with no spaces. An underscore is the only allowed special character"/> 
          </when>
        </conditional>
        <param name="eaMode" size="30" type="select" value="" display="radio" label="Specify type of within gene transcript comparison">
          <option value="pairwise" selected="true">Pairwise -- Compare pairs of transcripts within a gene</option>
          <option value="gene" selected="true">Gene -- Compare all transcripts within a gene</option>
        </param>
        <param name="keepIR" type="boolean" label="Set to 'Yes' if you want to keep transcripts with Intron Retention regions when generating transcript events"/>
      </when>
      <when value="gtf2">
        <param name="gtf1Dataset" type="data" format="gtf" label="Select GTF file containing transcriptomes of interest from your history"/>
        <param name="gtf2Dataset" type="data" format="gtf" label="Select 2nd GTF file containing transcriptomes of interest from your history" help="Files must contain “exon” features with transcript_id and gene_id values indicated in attributes" />
        <param name="transcriptPairs" type="select" display="radio" label="The TranD metrics can be output for all transcript pairs in both GTF files or for a subset of transcript pairs">           
            <option value="all"> Calculate TranD metrics for all transcript pairs in both GTF files</option>
            <option value="first"> Calculate TranD metrics for the minimum pairs in the first GTF file</option>
            <option value="second"> Calculate TranD metrics for the minimum pairs in the second GTF file</option>  
            <option value="both">Calculate TranD metrics for the minimum pairs in both GTF files</option>
        </param> 
        <param name="gtf1Name" type="text" label="Name to give GTF 1. Default: d1" help="User-specified name to be used for labeling output files related to first GTF file. Must be alphanumeric, cannot include any special characters except for underscores ‘_’, and cannot contain any spaces" value="d1"/>
        <param name="gtf2Name" type="text" label="Name to give GTF 2. Default: d2" value="d2" help="User-specified name to be used for output files related to second GTF file"/>
      </when>
     </conditional>
        <param name="complexityOnly" type="boolean" label="Select to output only complexity calculations" help="Select this parameter if you only want complexity measures as opposed to outputting performance of all analyses (ie event analysis, etc)"/>
        <param name="skipPlots" type="boolean" label="Skip generation of all plots" help="If 'Yes', TranD will not produce any plots"/>
        <param name="skipInterm" type="boolean" label="Skip output of intermediate files" help="If 'Yes', the TranD program will not output intermediate files (such as junction and exon region/fragment files)."/>
     <conditional name="logCond">
       <param name="logfile_selector" type="select" display="radio" label="Indicate whether you want a log file (if any) to be output that contains information about how the input files were processed"> 
         <option value="No">No</option> 
         <option value="Yes">Yes</option>
       </param> 
     </conditional>
  </inputs>
  <outputs>
    <!-- The discover datasets parameter is needed to dynamically collect the output datasets --> 
    <collection format= "csv" type="list" name="counts" label="${tool.name} on ${on_string}: Summary Counts and Intermediate Files" >
      <discover_datasets pattern="(?P&lt;name&gt;.*)\.csv" ext="csv" directory="outputs"/>
    </collection>
    <collection format= "gtf" type="list" name="gtf" label="${tool.name} on ${on_string}: Consolidated GTF" >
      <discover_datasets pattern="(?P&lt;name&gt;.*)\.gtf" ext="gtf" directory="outputs"/>
    </collection>
    <collection format= "png" type="list" name="plots" label="${tool.name} on ${on_string}: Plots" >
      <discover_datasets pattern="(?P&lt;name&gt;.*)\.png" ext="png" directory="outputs"/>
    </collection>
    <collection format= "txt" type="list" name="figureLegend" label="${tool.name} on ${on_string}: Plot Legends" >
      <discover_datasets pattern="(?P&lt;name&gt;.*)\.rtf" ext="rtf" directory="outputs" />
    </collection>
    <collection format= "txt" type="list" name="logFile" label="${tool.name} on ${on_string}: Log File" >
      <discover_datasets pattern="(?P&lt;name&gt;.*)\.txt" ext="txt" directory="outputs" />
    </collection>
  </outputs>
  <tests>
    <test>
       <!-- Calculate complexity measures only (do not generate events) on a GTF file after consolidation -->
       <param name="gtf1Dataset" value="cel_adult_FLAIR_chr4.gtf"/>
       <param name="complexityOnly" value="True" />
       <param name="keepir" value="True" />
       <output name="plots">
         <discovered_dataset designation="all_gene_prop_nt_variablility" ftype="png">
           <assert_contents><has_line line="Proportion of Variable Nucleotides"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="complexity_plots" ftype="png">
           <assert_contents><has_line line="Number of Transcripts per Gene"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="multi_xcrpt_gene_prop_nt_variablility" ftype="png">
           <assert_contents><has_line line="Proportion of Variable Nucleotides"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="transcriptome_summary_plot" ftype="png">
           <assert_contents><has_line line="Number of Transcripts per Gene"/></assert_contents>
          </discovered_dataset>
       </output>
       <output name="counts">
         <discovered_dataset designation="event_analysis_ef" ftype="csv">
           <assert_contents><has_line line="ef_id"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="event_analysis_er" ftype="csv">
           <assert_contents><has_line line="er_exon_ids"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="ir_transcripts" ftype="csv">
           <assert_contents><has_line line="er_transcript_ids"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="junction_catalog" ftype="csv">
           <assert_contents><has_line line="coords"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="transcriptome_complexity_counts" ftype="csv">
           <assert_contents><has_line line="num_transcript"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="uniq_exons_per_gene" ftype="csv">
           <assert_contents><has_line line="num_uniq_exon"/></assert_contents>
          </discovered_dataset>
       </output>
       <output name="figureLegend">
         <discovered_dataset designation="all_gene_prop_nt_variablility" ftype="rtf">
           <assert_contents><has_line line="Distribution of the proportion of variable nucleotides across all genes"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="complexity_plots" ftype="rtf">
           <assert_contents><has_line line="unique exons per gene"/></assert_contents>
          </discovered_dataset>
         <discovered_dataset designation="ir_transcripts" ftype="csv">
           <assert_contents><has_line line="Distribution of the proportion of variable nucleotides across multi-transcript genes"/></assert_contents>
          </discovered_dataset>
       </output>
    </test>
    <test>
       <!-- Compare pairs of transcripts within a gene -->
       <param name="gtf1Dataset" value="cel_adult_FLAIR_chr4.gtf"/>
       <param name="eaMode" value="gene" />
       <param name="keepir" value="True" />
    </test>
    <test>
      <!-- Calculate complexity measures on consolidated GTF file -->
      <!-- Generate event file by comparing all transcripts for a gene and create a transcriptome summary plot -->
      <param name="gtf1Dataset" value="cel_adult_FLAIR_chr4.gtf"/>
      <param name="consolidate" value="True" />
      <param name="consolPrefix" value="tr" />
      <param name="eaMode" value="gene" />
      <param name="keepir" value="True" />
    </test>
    <test>
      <!-- Test TranD on two GTF files and output metrics for all transcript pairs-->
      <param name="gtf1Dataset" value="cel_adult_FLAIR_chr4.gtf"/>
      <param name="gtf2Dataset" value="cel_L1_FLAIR_chr4.gtf" />
      <param name="transcriptPairs" value="all" /> 
    </test>
  </tests>
  <help><![CDATA[

**Tool Description** 

    TranD is a collection of tools that facilitate the metrics of structural variation for whole genome transcript annotation files (GTF) that pinpoint structural variation at the nucleotide level. The TranD User Guide is available for more detailed information. 

    TranD (Transcript Distances) can be used to calculate metrics of structural variation within and between annotation files (GTF). Structural variation reflects organismal complexity and three summary metrics for genome level complexity are calculated for every gene in a GTF file: 1) the number of transcripts per gene; 2) the number of exons per transcript; and 3) the number of unique exons (exons with unique genomic coordinates) per gene. From each of these metric distributions, summary statistics such as mean, median, variance, and inter-quartile range are calculated. 

With 1 GTF file input, gene mode can be used to generate these metrics for each gene and summary statistics and distributions across genes. Distributions are visualized in a series of plots. For 1 GTF and 2 GTF, a pairwise mode calculates distance metrics between 2 transcripts at the nucleotide level. In 1 GTF, this is all possible pairs within the gene, and when running the 2 GTF model, this is all possible pairs among GTF files. The distribution of these metrics across genes are visualized, and summary statistics for structural variations between pairs are calculated and reported. Visualizations of the distributions of the frequency of intron retention, alternative exon usage, donor/acceptor variation and 5', 3' variation in UTR regions are provided, as well as tabular formatted nucleotide level distances for both 1 GTF and 2 GTF.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**INPUTS**

- At least one GTF File is required as input into TranD

See the following link for an example of what a GTF file is and how it should be formatted:
https://mblab.wustl.edu/GTF22.html

-------------------------------------------------------------------------------------------------

*When running with One GTF:*

TranD can be used to ‘consolidate’ an individual transcriptome GTF.  Here, ‘consolidate’ means to combine, by gene, those transcripts that vary only in the length of the TSS or TTS (all other splice junctions are identical). The representative transcript that is returned contains the longest TSS and the longest TTS amongst the transcripts with identical splice junctions.  

TranD generates complexity measures from the input GTF file or, if specified, from the consolidated GTF file.  Gene level complexity measures can be calculated by comparing pairs of transcripts within a gene (‘pairwise’) or by comparing all transcripts within a gene (‘gene’). If ‘gene’ mode is selected, then a CSV file containing all possible exon regions and exon fragments is created, along with a summary plot describing the transcriptome.

**GTF File [REQUIRED]**: User must upload a GTF file containing of transcriptome of interest. File must contain “exon” features with transcript_id and gene_id values indicated in attributes.

**Consolidation Flag**: Set to 'Yes' consolidate transcripts prior to generating complexity measures.  If omitted, the tool will not consolidate transcripts in the input GTF file.  Complexity measure and events will be generated on the input GTF file directly.

**WARNING**: If consolidating transcripts, user must set a user-specified prefix to be added to consolidated transcript_id values (default: “tr”)

**Keep Intron Retention Regions**: If 'Yes', transcripts with Intron Retention(s) will be kept when generating transcript events



------------------------------------------------------


*When running with Two GTF:*

Compare two transcriptomes that are from the same genomic coordinates (both sets of transcript coordinates map to the same genome). 
  
**WARNING:** Transcriptomes must have shared gene_id values for transcripts to be compared within each shared gene 

**NOTE**: When running with two GTF files, user may toggle the settings in Galaxy in order to utilize parallelization to allow faster job processing. See TranD User Guide for more information. 

**Two GTF Files [REQUIRED]**: Two GTF files corresponding to the transcriptomes of interest are required. Files must contain “exon” features with transcript_id and gene_id values indicated in attributes.

**Names of Output Files:** Set desired names that will associated with each transcriptome to be used in output tables and plots (default: “d1” and “d2”). Names must be alphanumeric with no spaces or special characters other than “_”.

**Set Transcript Pairs:** Output category option allows user to select the output table of transcript pairs to only be minimum pairs from the “first” transcriptome, only minimum pairs from the “second” transcriptome, minimum pairs for “both” transcriptomes (minimum pair in either), or output “all” pairwise transcript pairs regardless of minimum pair classification. (Default: “both”)

**NOTE**: When running TranD with two GTF files, pairs of transcripts will be compared within a gene

-----------------------------------------------------------


Other Parameters that be set regardless of amount of GTF files: 

**Complexity Only Flag**:  Set to 'Yes' to generate complexity measures and exit before generating events

**Skip Generation of All plots:** If 'Yes', TranD will not produce any plots

**Skip output of intermediate files:** If 'Yes', the TranD program will not output intermediate files (such as junction and exon region/fragment files)

**Generate Log File**: Indicate whether a log file (if any) that contains information about how the input data was run is desired as output. 


-----------------------------------------------------------

**OUTPUTS**

**NOTE**: Different outputs are generated depending on the parameters set and the amount of GTF files input

*When running with one GTF, the following outputs are generated:*

- Boxplots containing the following complexity metrics:

  1. number of transcripts per gene
  2. number of unique exons per gene
  3. number of exons per transcript

- Figure legend(s) for complexity metrics box plots saved in .rtf format

- Full table of complexity counts for the transcriptome. See TranD User Guide for more details on the columns in the output file 

- Key file connecting each transcript_id value in the input GTF to the transcript_id value in the consolidated output GTF:
		a.  gene_id
		b.  transcript_id: The transcript_id in the starting GTF file
		c.  consolidation_transcript_id: The transcript_id in the output consolidation GTF file

- A consolidated GTF file: transcript_id values contain the user-specified prefix (or default “tr” prefix). Each transcript_id value is in the 	format [prefix]_[gene_id]_[number], where number is a by gene enumeration value set after sorting by gene and transcript length. (**NOTE:** the consolidated GTF file contains only “exon” features).

--------------------------------------------------------------------

*When running with two GTF, the following outputs are generated:*

- One output CSV file which includes the transcript distance and minimum distance output for all pairwise transcripts pairs (“all”), all minimum pairs of the first transcriptome to the second transcriptome (“first”), all minimum pairs of the second transcriptome to the frist transcriptome (“second”), or the minimum pairs for either the first transcriptome and/or the second transcriptome (“both”)

- Box plots of complexity metrics (saved as .png file) and automatically generated figure legend (saved as .rtf) for each transcriptome, where [name] represents the names given to each transcriptome (or “d1” and “d2”) as default

- Various plots described in TranD manuscript and automatically generated figure legends for each

- If intermediate files are output, CSV file of pairwise events generated for each pair is output 

  ]]></help>
  <expand macro="citations"/>
</tool>
